import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation


buildscript {
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		flatDir {
			dirs 'libs'
		}
		dependencies {
			classpath name:'command-plugin', version: '1+'
			classpath "net.ltgt.gradle:gradle-apt-plugin:0.20"
		}
	}
}

plugins {
	id 'com.github.johnrengelman.shadow' version '6.0.0'
	id 'java'
}

configure(allprojects){
	
	apply plugin: 'com.github.johnrengelman.shadow'
	apply plugin: "com.automationanywhere.command-codegen"
	
	ext {
		groupName = 'com.automationanywhere'
		testNgVersion = '6.14.3'
		loggerVersion = '2.10.0'
		jnaVersion = '5.3.1'	
		version '3.0.0'
	}
	group "$groupName"

	sourceCompatibility = JavaVersion.VERSION_11

	compileJava.options.encoding = 'UTF-8'
	compileTestJava.options.encoding = 'UTF-8'
	
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		flatDir {
			dirs 'libs'
		}
	}
	
	configurations {
		apt
	}
	
	compileJava {
		options.annotationProcessorPath = configurations.apt
		
		dependsOn processResources

	}
	
	packageJson{
		artifactName = project.name
		group = "$groupName"
	}
	
	jar.dependsOn commandCodeGen
	
	shadowJar {
		baseName = project.name
		classifier = null
		mergeServiceFiles('META-INF/spring.*')
		mergeServiceFiles('META-INF/services/java.sql.Driver')
		zip64 = true
		exclude 'META-INF/MANIFEST.MF'
		exclude 'META-INF/*.SF'
		exclude 'META-INF/*.DSA'
		exclude 'META-INF/*.RSA'
		rename '^OABWrapper.*\\.zip$', 'OABWrapper.zip'
	}
	
//	task relocateShadowJar(type: ConfigureShadowRelocation) {
//    target = tasks.shadowJar
//    prefix = "googlepkg" // Default value is "shadow"
////	}
	
//	tasks.shadowJar.dependsOn tasks.relocateShadowJar

	
	dependencies {
	
		compile group: 'com.google.cloud', name: 'google-cloud-translate', version: '1.95.0'
		compile group: 'com.google.cloud', name: 'google-cloud-vision', version: '1.99.3'
		compile group: 'com.google.cloud', name: 'google-cloud-speech', version: '1.24.0'
		compile group: 'com.google.cloud', name: 'google-cloud-texttospeech', version: '1.1.0'
		compile group: 'com.google.api-client', name: 'google-api-client', version: '1.30.10'

		
		compileOnly name: 'command-annotations', version: '1+'
		compileOnly name: 'bot-runtime', version: '1+'
		compileOnly name: 'bot-api', version: '1+'
		compileOnly name: 'common-security', version: '1+'
		implementation name: 'i18n-api', version: '1+'
		apt name: 'command-processor', version: '1+'
		compileOnly group: 'org.apache.logging.log4j', name: 'log4j-core', version: "$loggerVersion"
		testImplementation "org.testng:testng:$testNgVersion"
		testImplementation name: 'bot-runtime', version: '1+'
		testImplementation name: 'bot-api', version: '1+'
		implementation group: 'net.java.dev.jna', name: 'jna-platform', version: "$jnaVersion"		
	}
	
	
}



